# Nginx Configuration for Portfolio Application
# Demonstrating load balancing, SSL, caching, and security
# Author: Bodheesh VC

# Main configuration context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events block for connection handling
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP block with optimizations
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream servers for load balancing
    upstream portfolio_backend {
        least_conn;
        server 127.0.0.1:3000 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3001 weight=2 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3002 weight=1 max_fails=3 fail_timeout=30s backup;
        
        # Health check (requires nginx-plus or custom module)
        # health_check interval=30s fails=3 passes=2;
    }

    upstream portfolio_frontend {
        server 127.0.0.1:5000 weight=1;
        server 127.0.0.1:5001 weight=1 backup;
    }

    # Cache configuration
    proxy_cache_path /var/cache/nginx/portfolio 
                     levels=1:2 
                     keys_zone=portfolio_cache:10m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;

    # Main server block - HTTPS
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name portfolio.bodheesh.dev www.portfolio.bodheesh.dev;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/portfolio.crt;
        ssl_certificate_key /etc/ssl/private/portfolio.key;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Root directory for static files
        root /var/www/portfolio;
        index index.html index.htm;

        # Frontend application (React)
        location / {
            try_files $uri $uri/ @frontend;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
        }

        # Frontend fallback for SPA routing
        location @frontend {
            proxy_pass http://portfolio_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # API endpoints
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://portfolio_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Caching for GET requests
            proxy_cache portfolio_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_bypass $http_cache_control;
            add_header X-Proxy-Cache $upstream_cache_status;
        }

        # Authentication endpoints with stricter rate limiting
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://portfolio_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for auth endpoints
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # WebSocket support for real-time features
        location /socket.io/ {
            proxy_pass http://portfolio_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
        }

        # File uploads
        location /api/upload {
            client_max_body_size 50M;
            proxy_pass http://portfolio_backend;
            proxy_request_buffering off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Security: Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(sql|conf|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name portfolio.bodheesh.dev www.portfolio.bodheesh.dev;
        
        # Redirect all HTTP requests to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Admin panel (separate subdomain)
    server {
        listen 443 ssl http2;
        server_name admin.portfolio.bodheesh.dev;

        # SSL configuration (same as main site)
        ssl_certificate /etc/ssl/certs/portfolio.crt;
        ssl_certificate_key /etc/ssl/private/portfolio.key;

        # Basic authentication for admin panel
        auth_basic "Admin Area";
        auth_basic_user_file /etc/nginx/.htpasswd;

        location / {
            proxy_pass http://127.0.0.1:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # API documentation server
    server {
        listen 443 ssl http2;
        server_name docs.portfolio.bodheesh.dev;

        ssl_certificate /etc/ssl/certs/portfolio.crt;
        ssl_certificate_key /etc/ssl/private/portfolio.key;

        root /var/www/api-docs;
        index index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        # Cache documentation assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1d;
            add_header Cache-Control "public";
        }
    }

    # Monitoring endpoints (Prometheus metrics)
    server {
        listen 127.0.0.1:9113;
        server_name localhost;

        location /metrics {
            # Nginx metrics for Prometheus
            access_log off;
            allow 127.0.0.1;
            deny all;
            
            # This would require nginx-prometheus-exporter
            proxy_pass http://127.0.0.1:9114/metrics;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}

# Stream block for TCP/UDP load balancing (if needed)
stream {
    upstream database_servers {
        server 127.0.0.1:5432 weight=3;  # PostgreSQL
        server 127.0.0.1:3306 weight=2;  # MySQL
    }

    server {
        listen 5433;
        proxy_pass database_servers;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}
